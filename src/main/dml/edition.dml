package pt.ist.socialsoftware.edition.domain;

enum pt.ist.socialsoftware.edition.domain.RdgText.RdgTextType as RdgTextType;
enum pt.ist.socialsoftware.edition.domain.ManuscriptSource.Form as Form;
enum pt.ist.socialsoftware.edition.domain.ManuscriptSource.Material as Material;
enum pt.ist.socialsoftware.edition.domain.SpaceText.SpaceDim as SpaceDim;
enum pt.ist.socialsoftware.edition.domain.SpaceText.SpaceUnit as SpaceUnit;
enum pt.ist.socialsoftware.edition.domain.Rend.Rendition as Rendition;
enum pt.ist.socialsoftware.edition.domain.AddText.Place as Place;
enum pt.ist.socialsoftware.edition.domain.DelText.HowDel as HowDel;

class LdoD {
	String title;
	String author;
	String editor;
	String sponsor;
	String principal;
	String funder;
}

relation DomainRootHasAWorklrApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 1..1;
	}
	LdoD playsRole ldoD {
		multiplicity 0..1;
	}
}

class LdoDUser {
	String username;
	String password;
}

relation LdoDHasLdoDUsers {
	LdoD playsRole ldoD {multiplicity 1..1;}
	LdoDUser playsRole users {multiplicity 0..*;}
}

class Role {
	String rolename;
}

relation LdoDHasRoles {
	LdoD playsRole ldoD {multiplicity 1..1;}
	Role playsRole roles {multiplicity 0..*;}
}

relation LdoDUsersAndRoles {
	LdoDUser playsRole users {multiplicity 0..*;}
	Role playsRole roles {multiplicity 0..*;}
}

class Edition {
	String xmlId;
	String title;
	String date;
	String acronym;
}

class ExpertEdition extends Edition {
	String author;
	String editor;
}

class VirtualEdition extends Edition {
	Boolean pub;
}

relation LdoDHasExpertEditions {
	LdoD playsRole ldoD4Expert {multiplicity 1..1;}
	ExpertEdition playsRole expertEditions {multiplicity 0..*;}
}

relation LdoDHasVirtualEditions {
	LdoD playsRole ldoD4Virtual {multiplicity 1..1;}
	VirtualEdition playsRole virtualEditions {multiplicity 0..*;}
}

relation LdoDUserParticipatesVirtualEditions {
	LdoDUser playsRole participant {multiplicity 0..*;}
	VirtualEdition playsRole myVirtualEditions {multiplicity 0..*;}
}

relation LdoDUserSelectsVirtualEditions {
	LdoDUser playsRole selectedBy {multiplicity 0..*;}
	VirtualEdition playsRole selectedVirtualEditions {multiplicity 0..*;}
}

class Taxonomy {
	String xmlId;
	String name;
}

class Category {
	String xmlId;
	String name;
}

relation LdoDHasTaxonomies {
	LdoD playsRole ldoD {multiplicity 1..1;}
	Taxonomy playsRole taxonomies {multiplicity 0..*;}
}

relation TaxonomyHasCategories {
	Taxonomy playsRole taxonomy {multiplicity 1..1;}
	Category playsRole categories {multiplicity 0..*;}
}

class Heteronym {
	String xmlId;
	String name;
}

relation LdoDHasHeteronyms {
	LdoD playsRole ldoD {multiplicity 1..1;}
	Heteronym playsRole heteronyms {multiplicity 0..*;}
}

class Fragment {
	String xmlId;
	String title;
}

relation LdoDHasFragments {
	LdoD playsRole ldoD {multiplicity 1..1;}
	Fragment playsRole fragments {multiplicity 0..*;}
}

class FragInter {
	String xmlId;
	String date;
}

relation FragmentHasFragInters {
	Fragment playsRole fragment {multiplicity 1..1;}
	FragInter playsRole fragmentInter {multiplicity 0..*;}
}

relation FragInterAttributesHeronym {
	FragInter playsRole fragInter {multiplicity 0..*;}
	Heteronym playsRole heteronym {multiplicity 0..1;}
}

relation FragInterHasCategories {
	FragInter playsRole fragInters {multiplicity 0..*;}
	Category playsRole categories {multiplicity 0..*;}
}

class ExpertEditionInter extends FragInter {
	String title;
	String volume;
	int number;
	int startPage;
	int endPage;
	String notes;
}

class VirtualEditionInter extends FragInter;

class SourceInter extends FragInter;

relation ExpertEditionHasExpertEditionInters {
	ExpertEdition playsRole expertEdition {multiplicity 1..1;}
	ExpertEditionInter playsRole expertEditionInters {multiplicity 0..*;}
}

relation VirtualEditionHasVirtualEditionInters {
	VirtualEdition playsRole virtualEdition {multiplicity 1..1;}
	VirtualEditionInter playsRole virtualEditionInters {multiplicity 0..*;}
}

class Source {
	String xmlId;
	Boolean hasLdoDLabel;
}

relation FragmentHasSources {
	Fragment playsRole fragment {multiplicity 1..1;}
	Source playsRole sources {multiplicity 0..*;}
}

relation SourceHasSourceInters {
	Source playsRole source {multiplicity 1..1;}
	SourceInter playsRole sourceInters {multiplicity 0..*;}
}

class ManuscriptSource extends Source {
	String settlement;
	String repository;
	String idno;
	String altIdentifier;
	Form form;
	Material material;
	int columns;
	String notes;
}

class PrintedSource extends Source {
	String title;
	String pubPlace;
	String issue;
	String date;
}

class TextPortion {
}

relation FragmentHasTextPortion {
	Fragment playsRole fragment {multiplicity 0..1;}
	TextPortion playsRole textPortion {multiplicity 0..1;}
}

class RdgText extends TextPortion {
	RdgTextType type;
}

relation TextPortionHasNextTextPortion {
	TextPortion playsRole prevText {multiplicity 0..1;}
	TextPortion playsRole nextText {multiplicity 0..1;}
}

relation TextPortionContainsTextPortion {
	TextPortion playsRole childText {multiplicity 0..*;}
	TextPortion playsRole parentText {multiplicity 0..1;}
}

relation TextPortionContainsFirstTextPortion {
	TextPortion playsRole firstChildText {multiplicity 0..1;}
	TextPortion playsRole parentOfFirstText {multiplicity 0..1;}
}

relation TextPortionContainsLastTextPortion {
	TextPortion playsRole lastChildText {multiplicity 0..1;}
	TextPortion playsRole parentOfLastText {multiplicity 0..1;}
}

class RdgGrpText extends TextPortion;

class AppText extends TextPortion;

relation FragInterHasRdgTexts {
	FragInter playsRole fragInters {multiplicity 0..*;}
	RdgText playsRole rdg {multiplicity 0..*;}
}

class SimpleText extends TextPortion {
	String value;
}

class SegText extends TextPortion;

class Rend {
	Rendition rend;
}

relation SegTextHasRend {
	SegText playsRole text {multiplicity 0..1;}
	Rend playsRole rend {multiplicity 0..*;}
}

class LbText extends TextPortion {
	Boolean breakWord;
	Boolean hyphenated;
}

relation LbTextHasFragInters {
	LbText playsRole lbText {multiplicity 0..*;}
	FragInter playsRole fragInter {multiplicity 0..*;}
}

class PbText extends TextPortion;

relation PbTextHasFragInters {
	PbText playsRole pbText {multiplicity 0..*;}
	FragInter playsRole fragInter {multiplicity 0..*;}
}

class SpaceText extends TextPortion {
	SpaceDim dim;
	int quantity;
	SpaceUnit unit;
}

class ParagraphText extends TextPortion {
}

class AddText extends TextPortion {
	Place place;
}

class DelText extends TextPortion {
	HowDel how;
}

class SubstText extends TextPortion {
}